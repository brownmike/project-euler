# Pentagon numbers
# Problem 44

# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten
# pentagonal numbers are:

  # 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
# 70 − 22 = 48, is not pentagonal.

# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
# difference are pentagonal and D = |Pk − Pj| is minimised; what is the value
# of D?

require 'benchmark'

class Euler44
  def self.solve
    2.upto(Float::INFINITY) do |k|
      k.downto(1) do |j|
        pk, pj = k.pentagon, j.pentagon
        if (pk + pj).pentagonal? && (pk - pj).pentagonal?
          puts "k = #{k}, j = #{j}"
          return pk - pj
        end
      end
    end
  end
end

class Integer
  def pentagon
    self * (3*self-1) / 2
  end

  def pentagonal?
    # Solve for n(3n-1)/2 = self
    n = Math.sqrt((self * 2) * 12 + 1)/6 + 1/6.0
    return n % 1 == 0
  end
end

p Benchmark.measure { puts Euler44.solve }

# Highly divisible triangular number
# Problem 12

# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
# ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28

# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred
# divisors?

class TriangleNumbers
  attr_reader :numbers

  def initialize
    @numbers = [1]
    @i = 1
  end

  def next_num
    @numbers << numbers.last + @i.next
    @i += 1
    numbers.last
  end

  def with_more_than_n_factors(n)
    loop do
      if numbers.last.factors.count > n
        return numbers.last
      else
        next_num
      end
    end
  end
end

class Fixnum
  def factors
    factors = []
    limit = Math.sqrt(self)
    1.upto(limit) do |n|
      if self % n == 0
        factors << n
        if self / n != n
          factors << (self / n)
        end
      end
    end
    factors
  end
end
